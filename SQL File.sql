-- 15.	Identify the top 5 doctors who generated the most revenue but had the fewest patients. (SQL)

with
rev
as
(select doctor_name,sum(Total_Bill) as revenue,count(patient_id) as number_of_patients from docpat
group by doctor_name
order by revenue desc,number_of_patients asc)

select *,round(revenue/number_of_patients,0) as revenue_per_patient from rev
order by revenue_per_patient desc;

-- 16.	Find the department where the average waiting time has decreased over three consecutive months. (SQL)
with patient
as
(select department_referral,date_format(date_of_visit,'%m %Y') as month_year,avg(patient_waittime) as avg_ptime from hospital
group by department_referral,month_year
order by department_referral desc),
prev
as
(select *,lag(avg_ptime,1) over (partition by department_referral order by month_year asc) as prev_month_ptime,
lag(avg_ptime,2) over (partition by department_referral order by month_year asc) as prev_prev_monthptime from patient)

select distinct department_referral from prev
where avg_ptime<prev_month_ptime and prev_month_ptime < prev_prev_monthptime;


-- 17.	Determine the ratio of male to female patients for each doctor and rank the doctors based on this ratio. (SQL)

-- male patients
with gend
as
(select d.patient_id,patient_gender,doctor_name from docpat d
join hospital h on d.patient_id=h.patient_id),
male_pat
as
(select doctor_name,count(patient_id) as Male_Patients from gend
where patient_gender='M'
group by doctor_name),
female_pat
as
(select doctor_name,count(patient_id) as Female_Patients from gend
where patient_gender='F'
group by doctor_name),
ratio
as
(select m.doctor_name,Male_Patients/Female_Patients as Gender_ratio from male_pat m
join female_pat f on m.doctor_name=f.doctor_name)

select *,rank() over (order by Gender_ratio desc) as Ranking from ratio;


-- 18.	Calculate the average satisfaction score of patients for each doctor based on their visits. (SQL)

select doctor_name,round(avg(patient_sat_score),2) as average_satisfaction from docpat d 
join hospital h on d.patient_id=h.patient_id
group by doctor_name
order by round(avg(patient_sat_score),2) desc;

-- 19.	Find doctors who have treated patients from different races and calculate the diversity of their patient base. (SQL)

select doctor_name,count(distinct patient_race) as diversity_count from docpat d
join hospital h on d.patient_id=h.patient_id
group by doctor_name
order by diversity_count desc;

-- 20.	Calculate the ratio of total bills generated by male patients to female patients for each department. (SQL)

with gend
as
(select d.patient_id,d.department_referral,patient_gender,DoctorID,Appointment_Fees from docpat d
join hospital h on d.patient_id=h.patient_id),
malebills
as
(select department_referral,count(Appointment_Fees) as Male_Bills from gend
where patient_gender='M'
group by department_referral),
femalebills
as
(select department_referral,count(Appointment_Fees) as Female_Bills from gend
where patient_gender='F'
group by department_referral)

select m.department_referral,Male_Bills,Female_Bills,Male_Bills/Female_Bills as bill_ratio from malebills m 
join femalebills f on m.department_referral=f.department_referral
order by bill_ratio desc;


-- 21.	Update the patient satisfaction score for all patients who visited the "General Practice" 
-- department and had a waiting time of more than 30 minutes. 
-- Increase their satisfaction score by 2 points, but ensure that the satisfaction score does not exceed 10. (SQL)

update hospital
set patient_sat_score= least(patient_sat_score+2,10)
where department_referral='General Practice' and patient_waittime>30 and patient_sat_score<=8;

SET SQL_SAFE_UPDATES = 0;

